#!/usr/bin/env python

import subprocess
import re

def main():
    primary = "eDP-1"
    monitor = "HDMI-1"

    same_as_primary(primary, monitor)

def same_as_primary(primary, monitor):
    primary_res = _get_screen_resolution(primary)
    if not primary_res:
        print("get primary_res failed")
        return
    print(f"primary_res: {primary_res}")

    monitor_res = _get_screen_resolution(monitor)
    if not monitor_res:
        print("get monitor_res failed")
        return
    print(f"monitor_res: {monitor_res}")

    scale = max(primary_res[0] / monitor_res[0], primary_res[1] / monitor_res[1])
    panning = primary_res

    _print_run(f"xrandr --output {monitor} --scale {scale}x{scale} --mode {monitor_res[0]}x{monitor_res[1]} --panning {panning[0]}x{panning[1]}")
    _print_run(f"xrandr --output {primary} --auto")

def _print_run(command):
    print(command)
    subprocess.run(command, shell=True)

def _get_screen_resolution(screen_name):
    output = subprocess.check_output("xrandr", encoding="utf-8")
    pattern = f"{screen_name} connected .*?\n.*?(\\d+x\\d+)"
    match = re.search(pattern, output)
    if match:
        return tuple(map(int, match.group(1).split('x')))
    else:
        return None

if __name__ == "__main__":
    main()
